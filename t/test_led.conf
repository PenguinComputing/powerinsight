-- Describe the hardware
MainCarrier( 10020335 )
TCCHeader( 10019889 )

-- Configure the sensors
Sensors(
  { conn="J1",  name="CPU1",   volt="12v", amp="shunt10" },
  { conn="J2",  name="MEM1",   volt="12v", amp="shunt25" },
  { conn="J3",  name="CPU2",   volt="12v", amp="acs713_20" },
  { conn="J4",  name="MEM2",   volt="12v", amp="shunt25" },
  { conn="J5",  name="ATX12",  volt="12v", amp="shunt25" },
  { conn="J6",  name="ATX5",   volt="5v",  amp="shunt25" },
  { conn="J7",  name="ATX5sb", volt="5v",  amp="shunt50" },
  { conn="J8",  name="ATX3.3", volt="3v3", amp="shunt10" },
  { conn="J9",  name="HDD12",  volt="12v", amp="shunt25" },
  { conn="J10", name="HDD5",   volt="5v",  amp="shunt25" },
  { conn="J11", name="PCI12",  volt="12v", amp="acs723_10" },
  { conn="J12", name="PCI3.3", volt="3v3", amp="acs723_10" },

  { conn="T1",  name="Tcpu1",  temp="typeK" },
  { conn="T2",  name="Tcpu2",  temp="typeK" },
  { conn="T3",  name="Thca",   temp="typeK" },
  { conn="T4",  name="Tmem1",  temp="typeK" },
  { conn="T5",  name="Tmem2",  temp="typeK" },
  { conn="T6",  name="Tout",   temp="typeK" },

  { conn="Tja", name="Tina" },
  { conn="Tjb", name="Tinb" },
  { conn="Tjm", name="Tamb" }
)

function App (...)
  local P = pi
  local M = P.M
  local scale = { 12, 12, 25, 25, 25, 25, 25, 25 }

  -- P.i2c_device( M.i2c_2.fd, 0x70 )
  M.i2c_2:device( 0x70 )
  io.write( "sc620:" )
  for addr = 0, 9 do
    io.write( string.format( " %02x", P.i2c_read( M.i2c_2.fd, addr) ) )
  end
  io.write( "\n" )

  io.write( "Turning dimming to 0 ...\n" )
  for addr = 1, 8 do
    M.i2c_2:write( 1, 0 )
  end

  io.write( "Turning LED on...\n" )
  M.i2c_2:write( 0, 0xff ) -- turn on all LED

  for k = 1, 10 do
    for l = 1, 25 do
      io.write( string.format( "Setting dimming to %d ...\n", l ) )
      for addr = 1, 8 do
        M.i2c_2:write( addr, l*scale[addr]/25 )
      end
    end
    for l = 24, 0, -1 do
      io.write( string.format( "Setting dimming to %d ...\n", l ) )
      for addr = 1, 8 do
        M.i2c_2:write( addr, l*scale[addr]/25 )
      end
    end
  end
  M.i2c_2:write( 0, 0 )
end

-- ex: set sw=2 sta et syntax=lua : --
