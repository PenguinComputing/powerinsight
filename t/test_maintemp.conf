-- Describe the hardware
MainCarrier( "PN=10020335" )

function App (...)
-- Test MainCarrier temp sensor
  local P = pi
  local M = P.M
  local i,j
  M.spi2_0.bank:set(1)
  P.spi_maxspeed( M.spi2_0.fd, 2000000 )
  P.spi_maxspeed( M.spi2_1.fd, 2000000 )
  P.ads8344_init( M.spi2_0.fd )
  P.ads8344_init( M.spi2_1.fd )

  local start = P.gettime( )
  local ten = { }
  -- Speeds can be specified on the command line
  local speed = {...}
  -- Or we use these default test speeds
  if #speed < 1 then
    speed = { 2000, 4000, 8000, 16000, 32000, 64000, 100000, 200000, 400000, 1000000 }
  end
  for i = 1, 10 do
    ten[i] = P.ads8344_mkmsg({ mux=7, speed_hz=16000 }, 1)
  end
  for i = 1, #speed do
    for j = 1, 10 do
      ten[j].speed_hz=speed[i]
    end
    io.write("# Speed_Hz = ", speed[i], "\n")
    local start2 = P.gettime( )
    P.spi_message( M.spi2_1.fd, unpack( ten ) )
    for j = 1, 10 do
      local r = P.ads8344_getraw( ten[j] )
      io.write(string.format("%.5f  %.5f  %.2f\n", r, r*4.096, P.rt2temp_PTS(r, 10)))
    end
    io.write("# Took ", P.gettime(start2), " seconds\n\n\n")
  end

--  local btemp = P.ads8344_getraw( P.spi_message( M.spi2_1.fd, P.ads8344_mkmsg{ mux=7, speed_hz=20000 } ))
--  io.write(string.format( "Vcc: %.3f [%.5f], Temp: %.2f [%.0f]\n", 4.096/vcc, vcc, P.rt2temp_PTS(btemp,10), btemp*65536 ))

  io.write(string.format( "# All Took %.6f seconds\n", P.gettime(start) ))
end

-- ex: set sw=2 sta et syntax=lua : --
