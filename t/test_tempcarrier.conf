-- Describe the hardware
Carrier = 10020335
J[1] = { volts="v5",  amps="acs713" }
J[2] = { volts="v33", amps="acs713" }
J[3] = { volts="v12", amps="shunt10" }
T[0] = { temp="ptd27" }
T[1] = { temp="typeK" }

pi.spi1_0_name = "/dev/spidev1.0" -- Temps
pi.spi2_0_name = "/dev/spidev2.0" -- Amps?
pi.spi2_1_name = "/dev/spidev2.1" -- Volts?

pi.spi1_bank = { name={ "/sys/class/gpio/gpio31/value", "/sys/class/gpio/gpio30/value" } }
pi.spi2_bank = { name={ "/sys/class/gpio/gpio44/value", "/sys/class/gpio/gpio45/value", "/sys/class/gpio/gpio46/value" } }

function App (...)
   local i, m, k, v, j
   local cnt = arg[1] or 99
   print( "arg= ", arg )
   print( "cnt= ", cnt )
   -- setbank( pi.spi1_bank, 0 )
   pi.write( pi.spi1_bank[1], "0" )
   pi.write( pi.spi1_bank[2], "0" )
   pi.spi_maxspeed( pi.spi1_0, 1000000 )
   for i = 1, cnt do
      pi.spi_message( pi.spi1_0, { tx_buf = "\16\10", delay_usecs = 10 }, { len = 11 } )
   end
   local all = { pi.spi_message( pi.spi1_0, { tx_buf = "\16\10", delay_usecs = 10 }, { len = 11 } ) }
   for i,m in ipairs(all) do
      for k,v in pairs(m) do
         io.write( "[",i,"]",k," = " )
         if k == "tx_buf" or k == "rx_buf" then
            io.write( string.format( "%02x", v:byte(1) ) )
            for j = 2, #v do
               io.write( string.format( ":%02x", v:byte(j) ) )
            end
            io.write( "\n" )
         else
            io.write( tostring(v), "\n" )
         end
      end
   end
end

-- ex: set sw=3 sta et : --
