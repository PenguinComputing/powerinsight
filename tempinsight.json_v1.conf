
MainCarrier( 10016424 )

-- Configure the sensors
Sensors(
  { conn="J1",  name="R1Supply",  temp="Rt44004" },
  { conn="J2",  name="R1Return",  temp="Rt44004" },
  { conn="J3",  name="R2Supply",  temp="Rt44004" },
  { conn="J4",  name="R2Return",  temp="Rt44004" },
  { conn="J5",  name="CPU1", volt="12v", amp="acs713_20" }
--  { conn="J5",  name="Temp5",  temp="Rt44004" }
--  { conn="J6",  name="Temp6",  temp="Rt44004" }
--  { conn="J7",  name="Temp7",  temp="Rt44004" }
--  { conn="J8",  name="Temp8",  temp="Rt44004" }
--  Another seven are also available (J9-J15)
)

-- Our own App
function App (...)
   -- Get program arguments
   local args = { ... }

   if #args == 0 then
      -- No arguments, read and display every named sensor
      for k, s in ipairs( S ) do
        if s.name ~= nil and s.name ~= "" then
          table.insert( args, s.name )
        elseif not string.find(s.conn, "^[JT]") then
          table.insert( args, s.conn )
        end
      end
   end

   -- Loop through args, read each and print in JSON array format
   io.write( "[ " )
   local comma = 0
   for k, v in ipairs( args ) do
      s = byName[v]
      if comma ~= 0 then io.write( ',\n' ) end
      if s == nil then
         io.write( '{ "name": "', v, '" }' )
      -- elseif s.temp ~= nil and s.araw ~= nil then
      --    io.write( string.format( '{ "name": "%s", "temp": %.3f, "raw": %.6f }', v, s:temp( ), s.araw(s.acs,s.mux)  ) )
      elseif s.temp ~= nil then
         io.write( string.format( '{ "name": "%s", "temp": %.3f }', v, s:temp( ) ) )
      elseif s.volt ~= nil and s.amp ~= nil then
         io.write( string.format( '{ "name": "%s", "power": %.3f, "volt": %.3f, "amp": %.3f }', v, s:power( ) ) )
      elseif s.volt ~= nil and s.amp == nil then
         io.write( string.format( '{ "name": "%s", "volt": %.3f }', v, s:volt( ) ) )
      else
         io.write( '{ "name": "', v, '" }' )
      end
      comma = 1
   end
   io.write( " ]\n" )
end

-- ex: set sw=2 sta et : --
